Git 명령어

Git의 3가지 공간
- working directory(=work tree) : 현재 내가 수정하고 있는 공간(add 전에 수정중인 공간)
- index(=staging area, cashe) : commit 전 대기 상태의 공간(add 후 대기 공간)
- repository : commit한 상태의 공간

Git 관련 모든 명령어 확인
https://git-scm.com/docs

Git 사용법 확인
$ git --help

Git 프로그램 그 자체를 최신버전으로 업데이트
$ git update-git-for-windows

Git 버전 확인
$ git --version

Git의 모든 설정 확인
$ git config --list

config 명령의 옵션 확인
$ git config -h

설정 파일 .gitconfig 편집 모드로 열기
$ git config --global -e

Git 로그인 정보 없애기
$ git config --global credential.helper manager
$ git credential-manager delete https://github.com

사용자 관련 설정 및 확인
$ git config --global user.name "사용자명"
$ git config --global user.email "사용자이메일"
$ git config user.name
$ git config user.email

remote repository에 업/다운로드할 때 줄바꿈 표시를 운영체제에 맞게 자동으로 변경[\r\n <===> \n]되게 설정 및 확인
$ git config --global core.autocrlf true <= Windows의 경우
$ git config --global core.autocrlf input <= macOS의 경우
$ git config core.autocrlf

working directory(=work tree) 생성 및 이동
$ mkdir WorkingDirectory
$ cd WorkingDirectory

Git 초기화 => master branch 생성
$ git init

초기화된 master branch 삭제
$ rm -rf .git

상태 확인
$ git status

status 명령의 옵션 확인
$ git status -h

상태 간결하게 확인
$ git status -s

원격 저장소와 연결 및 확인
$ git remote add origin https://github.com/nunojack/TortoiseGit
$ git remote -v

원격 저장소와 연결 삭제 및 확인
$ git remote remove origin
$ git remote -v

working directory(=work tree)에서 작업한 상태를 index(=staging area, cashe)에 기록하기
$ git add git.txt

특정 파일 변경 사항 확인
$ git diff filename

working directory에 있는 변경 사항들만 확인
$ git diff

staging area에 있는 변경 사항들만 확인
$ git diff --staged
$ git diff --cached
--cached는 --staged와 동의어로 사용됨

index(=staging area, cashe)에 기록된 변경 사항을 repository(저장소)에 기록하기
$ git commit -m "커밋 메시지"

로그 확인
$ git log

원격 저장소로 변경된 파일을 업로드하기
$ git push origin master


